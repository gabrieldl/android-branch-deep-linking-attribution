name: unit-and-instrumented-tests
on: [push]
jobs:
  unit-test-api-level:
    runs-on: macos-latest
    strategy:
      # min api and latest
      matrix:
        androidSDK: ["21", "33"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # create an emulator with google apis, runs on java 8
      - name: Create Android emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --licenses
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-"${{ matrix.androidSDK }}";google_apis;x86_64"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager --verbose create avd --force --name test --package "system-images;android-"${{ matrix.androidSDK }}";google_apis;x86_64"
      # boots and waits for the emulator to be ready
      - name: Launch Emulator
        run: |
          echo "Starting emulator and waiting for boot to complete."
          nohup $ANDROID_HOME/tools/emulator -avd test -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do echo "waiting..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
      # repo's gradle is configured to run on java 11
      - name: Setup java 11 for gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Run unit tests
        run: |
          ./gradlew :Branch-SDK:testDebugUnitTest 
      # contains the reports and apk
      - name: Save test artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-api-level-${{ matrix.androidSDK }}
          path: ./Branch-SDK/build/
  instrumented-test-api-level:
    runs-on: macos-latest
    strategy:
      # min api and latest
      matrix:
        androidSDK: ["21", "33"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # create an emulator with google apis, runs on java 8
      - name: Create Android emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --licenses
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-"${{ matrix.androidSDK }}";google_apis;x86_64"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager --verbose create avd --force --name test --package "system-images;android-"${{ matrix.androidSDK }}";google_apis;x86_64"
      # boots and waits for the emulator to be ready
      - name: Launch Emulator
        run: |
          echo "Starting emulator and waiting for boot to complete."
          nohup $ANDROID_HOME/tools/emulator -avd test -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do echo "waiting..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
      # repo's gradle is configured to run on java 11
      - name: Setup java 11 for gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      # gradlew will automatically connect to booted emulator
      - name: Run instrumented tests
        run: |
          ./gradlew :Branch-SDK:connectedDebugAndroidTest -Dorg.gradle.jvmargs="-Xmx8192M -Dkotlin.daemon.jvm.options\\=\"-Xmx8192M\"" --info
      # contains the reports and apk
      - name: Save test artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: instrumented-test-api-level-${{ matrix.androidSDK }}
          path: ./Branch-SDK/build/
