name: unit-and-instrumented-tests
on: [push]
jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup java 8 for android sdk tools 
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      #- name: Create Android emulator
      #  run: |
      #    yes | sudo ~/Library/Android/sdk/tools/bin/sdkmanager --licenses
      #    $ANDROID_HOME/tools/bin/sdkmanager --version
      #    $ANDROID_HOME/tools/bin/sdkmanager --list
      #    echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-31;google_apis;x86_64"
      #    echo "no" | $ANDROID_HOME/tools/bin/avdmanager --verbose create avd --force --name test --abi google_apis/x86_64 --package 'system-images;android-31;google_apis;x86_64'
      #- name: Launch Emulator
      #  run: |
      #    ln -s ~/Library/Android/sdk/emulator/lib64 ~/Library/Android/sdk/emulator/qemu/darwin-x86_64/lib64
      #    echo "no" | $ANDROID_HOME/emulator/emulator "-avd" "test" "-wipe-data" "-no-audio" "-no-boot-anim"

     - name: Create Android emulator
       run: |
        brew install intel-haxm
        # Install AVD files
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;default;x86_64'
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --licenses
        
        # Create emulator
        $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_API_29_AOSP -d pixel --package 'system-images;android-27;default;x86_64'
        $ANDROID_HOME/emulator/emulator -list-avds
        if false; then
        emulator_config=~/.android/avd/Pixel_API_29_AOSP.avd/config.ini
        # The following madness is to support empty OR populated config.ini files,
        # the state of which is dependant on the version of the emulator used (which we don't control),
        # so let's be defensive to be safe.
        # Replace existing config (NOTE we're on MacOS so sed works differently!)
        sed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' "$emulator_config"
        sed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' "$emulator_config"
        sed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' "$emulator_config"
        # Or, add new config
        if ! grep -q "hw.lcd.density" "$emulator_config"; then
          echo "hw.lcd.density=420" >> "$emulator_config"
        fi
        if ! grep -q "hw.lcd.height" "$emulator_config"; then
          echo "hw.lcd.height=1920" >> "$emulator_config"
        fi
        if ! grep -q "hw.lcd.width" "$emulator_config"; then
          echo "hw.lcd.width=1080" >> "$emulator_config"
        fi
        echo "Emulator settings ($emulator_config)"
        cat "$emulator_config"
        fi
        
     - name: Start Android emulator
       run: |
        echo "Starting emulator and waiting for boot to complete...."
        ls -la $ANDROID_HOME/emulator
        nohup $ANDROID_HOME/tools/emulator -avd Pixel_API_29_AOSP -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
        echo "Emulator has finished booting"
        $ANDROID_HOME/platform-tools/adb devices
        sleep 30
        screencapture screenshot.jpg
        $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator.png
     - name: install recorder and record session
       run: |
        brew install ffmpeg
        $ANDROID_HOME/tools/emulator -port 18725 -verbose -no-window -no-audio -gpu swiftshader_indirect @Pixel_API_29_AOSP &
        ffmpeg -f avfoundation -i 0 -t 120 out.mov
    # node -e "const exec = require('child_process'); exec.exec('ffmpeg -f avfoundation -i 0 -t 120 out.mov'); exec.exec('$ANDROID_HOME/tools/emulator -port 18725 -verbose -no-window -no-audio -gpu swiftshader_indirect @Pixel_5_API_31 &');"
       env:
        HOMEBREW_NO_INSTALL_CLEANUP: 1
     - name: upload video
       uses: actions/upload-artifact@master
       with:
        name: out
        path: out.mov
        
     - uses: actions/upload-artifact@v3
       with:
        name: screenshot.jpg
        path: screenshot.jpg
        
     - uses: actions/upload-artifact@v3
       with:
        name: emulator.png
        path: emulator.png
        
      - name: setup java 11 for gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Run test
        run: |
          ./gradlew connectedCheck --info
